import Head from "next/head";
import { useState } from "react";
import Inner from "../../components/parts/Inner";
import CheckBox from "../../components/parts/Checkbox";
import EditListItem from "../../components/parts/EditListItem";
import { FabricJSCanvas, useFabricJSEditor } from "fabricjs-react";
import Image from "next/image";

export default function Edit() {
  const [bgColor, setBgColor] = useState<string>("white");
  const [hasBoardBgImage, setHasBoardBgImage] = useState<boolean>(true);

  const changeBoardBgColor = () => {
    bgColor === "white" ? setBgColor("gray-200") : setBgColor("white");
  };

  const changehasBoardBgImage = (
    event: React.ChangeEvent<HTMLInputElement>
  ) => {
    hasBoardBgImage
      ? setHasBoardBgImage(!hasBoardBgImage)
      : setHasBoardBgImage(hasBoardBgImage);
  };

  const { editor, onReady } = useFabricJSEditor();
  const onAddCircle = () => {
    editor?.addCircle();
  };
  const onAddRectangle = () => {
    editor?.addRectangle();
  };

  return (
    <div>
      <Head>
        <title>舞台シートを編集する | DesignSheets</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Inner styles="py-8 flex justify-between">
          <div className="sidebar w-[15%]">
            <h2 className="mb-12 font-medium">編集ツール</h2>
            <ul>
              <EditListItem text="背景色" editFunction={changeBoardBgColor}>
                <figure
                  className={`border rounded-sm border-gray-200 w-6 h-6 bg-${bgColor}`}
                ></figure>
              </EditListItem>
              <EditListItem text="円形" editFunction={onAddCircle}>
                <figure
                  className={`border rounded-[50%] border-black w-6 h-6`}
                ></figure>
              </EditListItem>
              <EditListItem text="四角形" editFunction={onAddRectangle}>
                <figure
                  className={`border rounded-sm border-black w-6 h-6`}
                ></figure>
              </EditListItem>
            </ul>
          </div>

          <div className="mainBoard w-[82%] relative">
            <FabricJSCanvas
              className={`board-canvas h-[567px] rounded-xl border-[3px] border-gray-200 bg-${bgColor}`}
              onReady={onReady}
            />
            <Image
              src="/img/common/boardBg.svg"
              alt=""
              layout="fill"
              className={`pointer-events-none ${
                hasBoardBgImage ? "visible" : "hidden"
              }`}
            />
            <CheckBox
              checked={hasBoardBgImage}
              onChange={(e) => setHasBoardBgImage(!hasBoardBgImage)}
              styles="mt-4"
            >
              舞台を表示
            </CheckBox>
          </div>
        </Inner>
      </main>
    </div>
  );
}
