import Head from "next/head";
import { useState } from "react";
import Inner from "../../components/parts/Inner";
import CheckBox from "../../components/parts/CheckBox";
import Button from "../../components/parts/Button";
import EditListItem from "../../components/parts/EditListItem";
import { fabric } from "fabric";
import { FabricJSCanvas, useFabricJSEditor } from "fabricjs-react";
import Image from "next/image";

export default function Edit() {
  const [bgColor, setBgColor] = useState<string>("white");
  const [hasBoardBgImage, setHasBoardBgImage] = useState<boolean>(true);
  const changeBoardBgColor = () => {
    bgColor === "white" ? setBgColor("gray-200") : setBgColor("white");
  };

  const { editor, onReady, selectedObjects } = useFabricJSEditor();

  const onAddCircle = () => {
    editor?.addCircle();
  };

  const onAddRectangle = () => {
    editor?.addRectangle();
  };

  const onAddCrossImage = () => { 
      fabric.Image.fromURL("/img/common/cross.svg", function (oImg: object) {
        editor?.canvas.add(oImg);
      });
  };
  

  const deleteObject = () => {
    if (selectedObjects && selectedObjects.length && confirm("選択されたオブジェクトを削除しますか？")) {
      selectedObjects.forEach((obj) => {
        editor?.canvas.remove(obj);
      });
    }
  };

  return (
    <div>
      <Head>
        <title>舞台シートを編集する | DesignSheets</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Inner styles="py-8 flex justify-between">
          <div className="sidebar w-[15%]">
            <h2 className="mb-12 font-medium">編集ツール</h2>
            <ul>
              <EditListItem text="背景色" editFunction={changeBoardBgColor}>
                <figure
                  className={`border rounded-sm border-gray-200 w-6 h-6 bg-${bgColor}`}
                ></figure>
              </EditListItem>
              <EditListItem text="円形" editFunction={onAddCircle}>
                <figure
                  className={`border rounded-[50%] border-black w-6 h-6`}
                ></figure>
              </EditListItem>
              <EditListItem text="四角形" editFunction={onAddRectangle}>
                <figure
                  className={`border rounded-sm border-black w-6 h-6`}
                ></figure>
              </EditListItem>
              <EditListItem text="ばつ印" editFunction={onAddCrossImage}>
                <figure className="w-6 h-6">
                  <Image
                    width="24"
                    height="24"
                    src="/img/common/cross.svg"
                    alt="ばつ印のロゴ"
                  />
                </figure>
              </EditListItem>
            </ul>
          </div>

          <div className="mainBoard w-[82%] ">
            <div className="relative">
              <FabricJSCanvas
                className={`board-canvas h-[567px] rounded-xl border-[3px] border-gray-200 bg-${bgColor}`}
                onReady={onReady}
              />
              <Image
                src="/img/common/boardBg.svg"
                alt=""
                fill
                className={`pointer-events-none  ${
                  hasBoardBgImage ? "visible" : "hidden"
                }`}
              />
            </div>

            <div className="mainBoard-bottom flex justify-between items-center mt-4">
              <CheckBox
                checked={hasBoardBgImage}
                onChange={(e) => setHasBoardBgImage(!hasBoardBgImage)}
              >
                舞台を表示
              </CheckBox>

              <Button
                buttonFunc={deleteObject}
                styles="bg-rose-500 text-white hover:bg-rose-600 text-sm"
              >
                選択要素の削除
              </Button>
            </div>
          </div>
        </Inner>
      </main>
    </div>
  );
}
